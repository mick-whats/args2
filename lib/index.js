// Generated by CoffeeScript 1.10.0
(function() {
  var Args2, _;

  _ = require('lodash');

  Args2 = (function() {
    function Args2(args1) {
      var args, res;
      this.args = args1;
      if (this["arguments"] != null) {
        args = Array.prototype.slice.call(this["arguments"], 0);
      } else if (this.args) {
        args = Array.prototype.slice.call(this.args, 0);
      } else {
        args = Array.prototype.slice.call(this, 0);
      }
      res = {
        nums: [],
        strs: [],
        objs: [],
        arrays: [],
        bools: [],
        funcs: [],
        others: []
      };
      args.forEach(function(item) {
        if (_.isNumber(item)) {
          return res.nums.push(item);
        } else if (_.isString(item)) {
          return res.strs.push(item);
        } else if (_.isPlainObject(item)) {
          return res.objs.push(item);
        } else if (_.isArray(item)) {
          return res.arrays.push(item);
        } else if (_.isBoolean(item)) {
          return res.bools.push(item);
        } else if (_.isFunction(item)) {
          return res.funcs.push(item);
        } else {
          return res.others.push(item);
        }
      });
      _.merge(this, res);
      return this;
    }

    Args2.prototype.get = function(argType, required, defaultValue) {
      var argArray, dict, errMsg;
      dict = {
        strs: 'String',
        nums: 'Number',
        objs: 'Object',
        arrays: 'Array',
        bools: 'Boolean',
        funcs: 'Function',
        others: 'Other'
      };
      argArray = this[argType];
      if (argArray.length) {
        return argArray.shift();
      } else {
        if (required) {
          errMsg = dict[argType] + " argument required";
          throw new Error(errMsg);
        } else if (_.isUndefined(defaultValue)) {
          return void 0;
        } else {
          return defaultValue;
        }
      }
    };

    Args2.prototype.str = function(required, defaultValue) {
      return this.get('strs', required, defaultValue);
    };

    Args2.prototype.num = function(required, defaultValue) {
      return this.get('nums', required, defaultValue);
    };

    Args2.prototype.obj = function(required, defaultValue) {
      return this.get('objs', required, defaultValue);
    };

    Args2.prototype.array = function(required, defaultValue) {
      return this.get('arrays', required, defaultValue);
    };

    Args2.prototype.bool = function(required, defaultValue) {
      return this.get('bools', required, defaultValue);
    };

    Args2.prototype.func = function(required, defaultValue) {
      return this.get('funcs', required, defaultValue);
    };

    Args2.prototype.other = function(required, defaultValue) {
      return this.get('Other', required, defaultValue);
    };

    Args2.prototype.string = Args2.prototype.str;

    Args2.prototype.number = Args2.prototype.num;

    Args2.prototype.object = Args2.prototype.obj;

    Args2.prototype.arr = Args2.prototype.array;

    Args2.prototype.boolean = Args2.prototype.bool;

    Args2.prototype["function"] = Args2.prototype.func;

    Args2.prototype.callback = Args2.prototype.func;

    return Args2;

  })();

  module.exports = Args2;

}).call(this);
